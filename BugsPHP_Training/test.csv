bugid	bug	buggy	patch
1	guzzle_guzzle_da94ef2e433d77af516d69c0f7d3c1b8ecd566dc_1_0_0	buggy: "$hostParts = \\explode($host, ':', 2);\n" context: "return $result;\n}\n\npublic static function isHostInNoProxy(string $host, array $noProxyArray): bool\n{\nif (\\strlen($host) === 0) {\nthrow new InvalidArgumentException('Empty host provided');\n}\n\nif (\\strpos($host, ':')) {\n$hostParts = \\explode($host, ':', 2);\n$host = $hostParts[0];\n}\n\nforeach ($noProxyArray as $area) {\nif ($area === '*') {\nreturn true;\n} elseif (empty($area)) {\ncontinue;\n} elseif ($area === $host) {\nreturn true;\n"	"$hostParts = \\explode(':', $host, 2);\n"
2	deployphp_deployer_743e951082e7a7a0e939e89ef7d7fa878198fb2c_1_0_0	buggy: 'warning("Please, make sure your server can connect to $host to clone repo.");\n' context: '$port = $url[\'port\'] ?? \'22\';\n} else if (preg_match(\'/(?:@|\\/\\/)([^\\/:]+)(?:\\:(\\d{1,5}))?/\', $repository, $matches)) {\n$host = $matches[1];\n$port = $matches[2] ?? \'22\';\n} else {\nwarning("Can\'t parse repository url ($repository)");\n}\nif (isset($host) && isset($port)) {\nrun("ssh-keygen -F $host:$port || ssh-keyscan -p $port -H $host >> ~/.ssh/known_hosts");\n} else {\nwarning("Please, make sure your server can connect to $host to clone repo.");\n}\n}\n\n$bare = parse(\'{{deploy_path}}/.dep/repo\');\n\nstart:\nrun("[ -d $bare ] || mkdir -p $bare");\nrun("[ -f $bare/HEAD ] || $git clone --mirror $repository $bare 2>&1");\n\ncd($bare);\n'	'warning("Please, make sure your server can clone the repo.");\n'
3	deployphp_deployer_1f488ac612b5105b352188f30cb5cf6a7116651c_2_0_0	buggy: 'if (Context::has()) {\nif (count($hostname) !== 1) {\nthrow new \\InvalidArgumentException("Can return only one host.");\n}\nreturn Deployer::get()->hosts->get($hostname[0]);\n}\n\n$deployer = Deployer::get();\n' context: 'use Symfony\\Component\\Console\\Question\\ChoiceQuestion;\nuse Symfony\\Component\\Console\\Question\\ConfirmationQuestion;\nuse Symfony\\Component\\Console\\Question\\Question;\nuse function Deployer\\Support\\array_merge_alternate;\nuse function Deployer\\Support\\env_stringify;\nuse function Deployer\\Support\\is_closure;\nuse function Deployer\\Support\\str_contains;\n\nfunction host(string ...$hostname)\n{\nif (Context::has()) {\nif (count($hostname) !== 1) {\nthrow new \\InvalidArgumentException("Can return only one host.");\n}\nreturn Deployer::get()->hosts->get($hostname[0]);\n}\n\n$deployer = Deployer::get();\nif (count($hostname) !== 1) {\nthrow new \\InvalidArgumentException("Can return only one host.");\n}\nreturn Deployer::get()->hosts->get($hostname[0]);\n}\n\n$deployer = Deployer::get();\n$aliases = Range::expand($hostname);\n\nforeach ($aliases as $alias) {\n'	'$deployer = Deployer::get();\nif (count($hostname) === 1 && $deployer->hosts->has($hostname[0])) {\nreturn $deployer->hosts->get($hostname[0]);\n}\n'
4	mockery_mockery_1ace7b2e271e83129cc468346702a9ebaa6e037e_1_0_0	buggy: "$this->_countValidatorClass = 'Mockery\\CountValidator\\Exact';\n" context: "\npublic function times($limit = null)\n{\nif (is_null($limit)) {\nreturn $this;\n}\nif (!is_int($limit)) {\nthrow new \\InvalidArgumentException('The passed Times limit should be an integer value');\n}\n$this->_countValidators[$this->_countValidatorClass] = new $this->_countValidatorClass($this, $limit);\n$this->_countValidatorClass = 'Mockery\\CountValidator\\Exact';\nreturn $this;\n}\n\npublic function never()\n{\nreturn $this->times(0);\n}\n\npublic function once()\n{\n"	"if('Mockery\\CountValidator\\Exact' !== $this->_countValidatorClass){\n$this->_countValidatorClass = 'Mockery\\CountValidator\\Exact';\nunset($this->_countValidators[$this->_countValidatorClass]);\n}\n"
5	vlucas_phpdotenv_1350cc310bf9138426d5f8949e1cdf3b5daa71f6_1_0_0	buggy: 'private function process(array $entries)\n' context: '{\nreturn Regex::split("/(\\r\\n|\\n|\\r)/", $content)->mapError(static function () {\nreturn \'Could not split into separate lines.\';\n})->flatMap(static function (array $lines) {\nreturn self::process(Lines::process($lines));\n})->mapError(static function (string $error) {\nthrow new InvalidFileException(\\sprintf(\'Failed to parse dotenv file. %s\', $error));\n})->success()->get();\n}\n\nprivate function process(array $entries)\n{\nreturn \\array_reduce($entries, static function (Result $result, string $raw) {\nreturn $result->flatMap(static function (array $entries) use ($raw) {\nreturn EntryParser::parse($raw)->map(static function (Entry $entry) use ($entries) {\nreturn \\array_merge($entries, [$entry]);\n});\n});\n}, Success::create([]));\n}\n}\n'	'private static function process(array $entries)\n'
6	slimphp_Slim_2b8774e9011a1afbf7992984a31d7f234989ab6f_1_0_0	buggy: '' context: '\nprivate function resolveSlimNotation(string $toResolve): array\n{\npreg_match(CallableResolver::$callablePattern, $toResolve, $matches);\n[$class, $method] = $matches ? [$matches[1], $matches[2]] : [$toResolve, null];\n\nif ($this->container && $this->container->has($class)) {\n$instance = $this->container->get($class);\n} else {\nif (!class_exists($class)) {\n}\n$instance = new $class($this->container);\n}\nreturn [$instance, $method];\n}\n\nprivate function assertCallable($resolved, $toResolve): callable\n{\nif (!is_callable($resolved)) {\nthrow new RuntimeException(sprintf(\n'	"if ($method) {\n$class .= '::' . $method . '()';\n}\n"
7	slimphp_Slim_740d7fee930c8ba80c92e197d36529539f33af18_2_0_0	buggy: '$this->emitStatusLine($response);\n$this->emitHeaders($response);\n' context: '\npublic function __construct(int $responseChunkSize = 4096)\n{\n$this->responseChunkSize = $responseChunkSize;\n}\n\npublic function emit(ResponseInterface $response): void\n{\n$isEmpty = $this->isResponseEmpty($response);\nif (headers_sent() === false) {\n$this->emitStatusLine($response);\n$this->emitHeaders($response);\n$this->emitHeaders($response);\n}\n\nif (!$isEmpty) {\n$this->emitBody($response);\n}\n}\n\nprivate function emitHeaders(ResponseInterface $response): void\n{\n'	'$this->emitHeaders($response);\n\n$this->emitStatusLine($response);\n'
8	ramsey_uuid_0b4be8392a80e9a06a100255e32ad88d1a3c5b9b_1_0_0	buggy: '$this->timeGenerator = $this->buildTimeGenerator($this->timeProvider);\n' context: 'public function getValidator(): ValidatorInterface\n{\nreturn $this->validator;\n}\n\npublic function setCalculator(CalculatorInterface $calculator): void\n{\n$this->calculator = $calculator;\n$this->numberConverter = $this->buildNumberConverter($calculator);\n$this->timeConverter = $this->buildTimeConverter($calculator);\n$this->timeGenerator = $this->buildTimeGenerator($this->timeProvider);\n}\n\npublic function setDceSecurityProvider(DceSecurityProviderInterface $dceSecurityProvider): void\n{\n$this->dceSecurityGenerator = $this->buildDceSecurityGenerator($dceSecurityProvider);\n}\n\npublic function setNodeProvider(NodeProviderInterface $nodeProvider): void\n{\n$this->nodeProvider = $nodeProvider;\n'	'\n\nif (isset($this->timeProvider)) {\n$this->timeGenerator = $this->buildTimeGenerator($this->timeProvider);\n}\n'
9	twigphp_Twig_567b1e2a0639a1d6b414c6b40a074de38b7c992e_3_0_0	buggy: '' context: 'foreach ($array as $k => $v) {\n$r[$k] = $arrow($v, $k);\n}\n\nreturn $r;\n}\n\nfunction twig_array_reduce($array, $arrow, $initial = null)\n{\nif (!\\is_array($array)) {\n}\n\nreturn array_reduce($array, $arrow, $initial);\n}\n}\n'	'if (!$array instanceof \\Traversable) {\nthrow new RuntimeError(sprintf(\'The "reduce" filter only works with arrays or "Traversable", got "%s" as first argument.\', \\gettype($array)));\n}\n\n'
10	twigphp_Twig_3a67fc7dc577515dda3ee0887d71d542e82fc0b8_4_0_0	buggy: '' context: '{\nreturn preg_replace(\'#/{2,}#\', \'/\', str_replace(\'\\\\\', \'/\', (string) $name));\n}\n\nprotected function validateName($name)\n{\nif (false !== strpos($name, "\\0")) {\nthrow new LoaderError(\'A template name cannot contain NUL bytes.\');\n}\n\n$parts = explode(\'/\', $name);\n$level = 0;\nforeach ($parts as $part) {\nif (\'..\' === $part) {\n--$level;\n} elseif (\'.\' !== $part) {\n++$level;\n}\n\nif ($level < 0) {\n'	"if ($this->isAbsolutePath($name)) {\nthrow new LoaderError(sprintf('A template name cannot be an absolute path (%s).', $name));\n"
11	twigphp_Twig_e333ccc9f6b0ce3417b1148652215d44e8d4e5ef_6_0_0	buggy: '$r = new \\ReflectionFunction(\\Closure::fromCallable($callable));\n' context: "$callable = [substr($callable, 0, $pos), substr($callable, 2 + $pos)];\n}\n\nif (\\is_array($callable) && method_exists($callable[0], $callable[1])) {\n$r = new \\ReflectionMethod($callable[0], $callable[1]);\n\nreturn $this->reflector = [$r, $callable, $r->class.'::'.$r->name];\n}\n\n$checkVisibility = $callable instanceof \\Closure;\n$r = new \\ReflectionFunction(\\Closure::fromCallable($callable));\n\nif (false !== strpos($r->name, '{closure}')) {\nreturn $this->reflector = [$r, $callable, 'Closure'];\n}\n\nif ($object = $r->getClosureThis()) {\n$callable = [$object, $r->name];\n$callableName = (\\function_exists('get_debug_type') ? get_debug_type($object) : \\get_class($object)).'::'.$r->name;\n} elseif ($class = $r->getClosureScopeClass()) {\n$callable = [$class, $r->name];\n"	'try {\n$closure = \\Closure::fromCallable($callable);\n} catch (\\TypeError $e) {\nthrow new \\LogicException(sprintf(\'Callback for %s "%s" is not callable in the current scope.\', $this->getAttribute(\'type\'), $this->getAttribute(\'name\')), 0, $e);\n}\n$r = new \\ReflectionFunction($closure);\n'
12	twigphp_Twig_f8009347c438bef22ef0603ab3d3ccb44bb10bed_7_0_0	buggy: '$this->validateName($name);\n\nlist($namespace, $shortname) = $this->parseName($name);\n' context: '\nif (isset($this->errorCache[$name])) {\nif (!$throw) {\nreturn false;\n}\n\nthrow new LoaderError($this->errorCache[$name]);\n}\n\ntry {\n$this->validateName($name);\n\nlist($namespace, $shortname) = $this->parseName($name);\n\nlist($namespace, $shortname) = $this->parseName($name);\n} catch (LoaderError $e) {\nif (!$throw) {\nreturn false;\n}\n\nthrow $e;\n}\n\n'	'list($namespace, $shortname) = $this->parseName($name);\n\n$this->validateName($shortname);\n'
13	kanboard_kanboard_427abb99611925add8cc79d757ff0e5b48a31a41_1_0_0	buggy: "throw new SQLException('SQL Error: '.$e->getMessage());\n" context: "public function handleSqlError(PDOException $e)\n{\n$this->cleanup();\n$this->db->cancelTransaction();\n$this->db->setLogMessage($e->getMessage());\n\nif ($this->db->getDriver()->isDuplicateKeyError($e->getCode())) {\nreturn false;\n}\n\nthrow new SQLException('SQL Error: '.$e->getMessage());\n}\n}\n"	"throw new SQLException('SQL Error['.$e->getCode().']: '.$e->getMessage());\n"
14	predis_predis_619890f7154ccb6aca758fe23fd4a5fd2f728caa_1_0_0	buggy: "$parameters['password'] = null;\n" context: "return $parameters;\n}\n\nif (is_string($parameters)) {\n$parameters = Parameters::parse($parameters);\n}\n\nif (is_array($parameters)) {\n$parameters['database'] = null;\n$parameters['username'] = null;\n$parameters['password'] = null;\n\nif (!isset($parameters['timeout'])) {\n$parameters['timeout'] = $this->sentinelTimeout;\n}\n}\n\nreturn $this->connectionFactory->create($parameters);\n}\n\npublic function getSentinelConnection()\n"	
15	predis_predis_836ab07d407c82aba0135ba2e652f4799aad77db_3_0_0	buggy: '' context: "protected static $aggregateArgumentPositionOffset = 3;\n\npublic function getId()\n{\nreturn 'ZUNIONSTORE';\n}\n\npublic function setArguments(array $arguments)\n{\n$this->setAggregate($arguments);\n\n$this->setWeights($arguments);\n$arguments = $this->getArguments();\n\n$this->setKeys($arguments);\n}\n}\n"	"if (! isset($arguments[3]) && (isset($arguments[2]['weights']) || isset($arguments[2]['aggregate']))) {\n$options = array_pop($arguments);\narray_push($arguments, $options['weights'] ?? []);\narray_push($arguments, $options['aggregate'] ?? 'sum');\n}\n"
16	barryvdh_laravel-ide-helper_2fc239623bf62503e81a2d6f8ec1b64537adb25a_3_0_0	buggy: '$writingToExternalFile = !$this->write;\n' context: "}\n\nprotected function getClassNameInDestinationFile(object $model, string $className): string\n{\n$reflection = $model instanceof ReflectionClass\n? $model\n: new ReflectionObject($model)\n;\n\n$className = trim($className, '\\\\');\n$writingToExternalFile = !$this->write;\n$classIsNotInExternalFile = $reflection->getName() !== $className;\n$forceFQCN = $this->laravel['config']->get('ide-helper.force_fqn', false);\n\nif (($writingToExternalFile && $classIsNotInExternalFile) || $forceFQCN) {\nreturn '\\\\' . $className;\n}\n\n$usedClassNames = $this->getUsedClassNames($reflection);\nreturn $usedClassNames[$className] ?? ('\\\\' . $className);\n}\n"	'$writingToExternalFile = !$this->write || $this->write_mixin;\n'
17	guzzle_psr7_04896ddeb63173888238ff1e8bad58df650a9d90_3_0_0	buggy: "if (substr($uri, 0, 6) !== 'php://') {\n" context: 'foreach ([\'contents\', \'name\'] as $key) {\nif (!array_key_exists($key, $element)) {\nthrow new \\InvalidArgumentException("A \'{$key}\' key is required");\n}\n}\n\n$element[\'contents\'] = Utils::streamFor($element[\'contents\']);\n\nif (empty($element[\'filename\'])) {\n$uri = $element[\'contents\']->getMetadata(\'uri\');\nif (substr($uri, 0, 6) !== \'php://\') {\n$element[\'filename\'] = $uri;\n}\n}\n\n[$body, $headers] = $this->createElement(\n$element[\'name\'],\n$element[\'contents\'],\n$element[\'filename\'] ?? null,\n$element[\'headers\'] ?? []\n);\n'	"if ($uri && \\is_string($uri) && \\substr($uri, 0, 6) !== 'php://') {\n"
18	guzzle_psr7_43573616adc604dcae8b4fe4762160f8e75b755a_4_0_0	buggy: 'if (!isset($result[$key])) {\n' context: "} else {\n$decoder = function ($str) {\nreturn $str;\n};\n}\n\nforeach (explode('&', $str) as $kvp) {\n$parts = explode('=', $kvp, 2);\n$key = $decoder($parts[0]);\n$value = isset($parts[1]) ? $decoder($parts[1]) : null;\nif (!isset($result[$key])) {\n$result[$key] = $value;\n} else {\nif (!is_array($result[$key])) {\n$result[$key] = [$result[$key]];\n}\n$result[$key][] = $value;\n}\n}\n\nreturn $result;\n"	'if (!array_key_exists($key, $result)) {\n'
